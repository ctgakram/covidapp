@using AppProj.Web.Helpers;
@using AppProj.Web;
@model AppProj.Web.Models.DoctorsPoleVisitModel
@{
    var ajaxOpt = new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "dialog1Body",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "openDialog1('Suspected Patient')",
        LoadingElementId = "loading",
        OnFailure = "failure"
    };

}
@using (Ajax.BeginForm("FollowupSave", "DoctorPole", ajaxOpt))
{
    @Html.ValidationSummary(true)

    @Html.HiddenFor(m => m.DoctorPoleId)


    <button type="button" class="collapsible">@Model.DoctorsPole.StandingData4.Name  <span style="font-size:11px;"> @Model.DoctorsPole.StaffName (PIN : @Model.DoctorsPole.PIN)</span></button>
    <div class="content">
        <table class="table table-striped table-bordered" style="width:100%">
            <tr>
                <th>Patient Name</th>
                <td>@Model.DoctorsPole.Name</td>
                <th>Mobile No</th>
                <td>@Model.DoctorsPole.MobileNo</td>
                <th>Gender</th>
                <td>@Model.DoctorsPole.StandingData.Name</td>
            </tr>
            <tr>
                <th>Program</th>
                <td>@Model.DoctorsPole.StandingData1.Name</td>
                <th>Area Office</th>
                <td>@Model.DoctorsPole.AreaOffice</td>
                <th rowspan="2" colspan="2">HR Comment: @Model.DoctorsPole.CommentByHR</th>
            </tr>
            <tr>
                <th>Division</th>
                <td>@Model.DoctorsPole.StandingData3.Name</td>
                <th>District</th>
                <td>@Model.DoctorsPole.StandingData4.Name</td>
            </tr>
        </table>
    </div>
    <table class="table table-striped table-bordered fixed_headers">
        <tr>
            <td>
                <strong>Any Travel?</strong>  @Model.DoctorsPole.IsTravel
            </td>
            <td>
                <strong>Travel within country?</strong> @Model.DoctorsPole.IsTravelCountry
            </td>
            <td>
                <strong>Travel outside country?</strong> @Model.DoctorsPole.IsTravelAbroad
            </td>
            <td>
                <strong>Any Contact history? </strong> @Model.DoctorsPole.IsContract
            </td>
        </tr>
    </table>

    <h3 style="padding-top:10px; color:#ff6a00">History</h3>
    if (Model.DoctorsPoleVisits.Count > 0)
    {
        foreach (var v in Model.DoctorsPoleVisits)
        {
            <button type="button" class="collapsible">By: <strong> @v.UserProfile.UserName </strong> at @v.EntryTime.ToString("dd MMM, yyyy hh:mm") </button>
            <div class="content">
                <table class="table table-striped table-bordered fixed_headers" style="width:100%">

                    <tr>
                        <td colspan="2" style="color:#c15305">
                            Symptoms collected by Call Center
                        </td>
                        <td colspan="2" style="color:#c15305">
                            Advices
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @if (v.IsFever)
                            {
                                <span>Fever</span><br />
                            }
                            @if (v.IsDryCough)
                            {
                                <span>Dry cough</span><br />
                            }
                            @if (v.IsSoreThroat)
                            {
                                <span>Sore throat</span><br />
                            }
                            @if (v.IsBreathing)
                            {
                                <span>Breathlessness</span>
                            }
                        </td>
                        <td>
                            Others:
                            <br />
                            @v.OtherSymptoms
                        </td>
                        <td>
                            @if (v.AdvConTreat == true)
                            {
                                <span>Conservative treatment</span><br />
                            }
                            @if (v.AdvQurentine == true)
                            {
                                <span>Quarentine</span><br />
                            }
                            @if (v.AdvHomeIsolation == true)
                            {
                                <span>Home Isolation</span><br />
                            }
                            @if (v.AdvReferHospital == true)
                            {
                                <span>Referred to Hospital</span>
                            }
                        </td>
                        <th>
                            Antibiotic Tahen : @if (v.IsAntibioticTaken == true)
                            {<span>Yes</span> }
                            else
                            {<span>No</span>}

                        </th>
                    </tr>
                    <tr>
                        <td>
                            Status :
                            @{var s = v.StandingData == null ? "" : v.StandingData.Name;}
                            @s
                        </td>
                        <td>
                            Comments : @v.Comments
                        </td>
                        <th colspan="2">
                            Co-morbidity for suspected case : @v.CoMorbidities
                        </th>
                    </tr>
                    <tr>
                        <td>
                            Sample taken date : @v.SampleTakenDate.ToDateString()
                            <br />
                            Test Result :
                            @{var t = v.StandingData2 == null ? "" : v.StandingData2.Name;}
                            @t
                            <br />
                            Test Result Date : @v.TestResultDate.ToDateString()
                        </td>
                        <td>
                            2nd Sample taken date : @v.SampleTakenDate1.ToDateString()
                            <br />
                            2nd Test Result :
                            @{var t1 = v.StandingData4 == null ? "" : v.StandingData4.Name;}
                            @t
                            <br />
                            2nd Test Result Date : @v.TestResultDate1.ToDateString()
                        </td>
                        <td>
                            3rd Sample taken date : @v.SampleTakenDate2.ToDateString()
                            <br />
                            3rd Test Result :
                            @{var t2 = v.StandingData5 == null ? "" : v.StandingData5.Name;}
                            @t
                            <br />
                            3rd Test Result Date : @v.TestResultDate2.ToDateString()
                        </td>
                        <td>
                            Admitted at : @{var k = v.StandingData3 == null ? "" : v.StandingData3.Name;}
                            @k
                            <br />
                            Admission Date : @v.AdmissionDate.ToDateString()
                            <br />
                            Discharge Date : @v.DischargeDate.ToDateString()
                        </td>
                    </tr>

                    <tr>
                        <td>
                            Hospital Name : @v.HospitalName
                        </td>
                        <td>
                            Attendant Name : @v.AlternateName
                        </td>
                        <td>
                            Attendant Phone Number : @v.AlternatePhoneNo
                        </td>
                        <td></td>
                    </tr>
                </table>
            </div>
        }
    }
    else
    {
        <p>No history found</p>
    }

    <h3 style="padding-top:10px; color:#ff6a00">Today's Followup</h3>
    <div style="width:100%">
        <table class="table table-striped table-bordered fixed_headers" style="width:100%">

            <tr>
                <td colspan="2" style="color:#c15305">
                    Symptoms collected by Call Center
                </td>
                <td style="color:#c15305">
                    Advices
                </td>
                <td style="color:#c15305">
                    Treatment
                </td>
            </tr>
            <tr>
                <th>
                    @Html.CheckBoxFor(model => model.IsFever) Fever
                    <br />
                    @Html.CheckBoxFor(model => model.IsDryCough) Dry cough
                    <br />
                    @Html.CheckBoxFor(model => model.IsSoreThroat) Sore throat
                    <br />
                    @Html.CheckBoxFor(model => model.IsBreathing) Breathlessness
                </th>
                <th>
                    Others
                    <br />
                    @Html.TextAreaFor(model => model.OtherSymptoms)
                </th>
                <th>
                    @Html.CheckBoxFor(model => model.AdvConTreat) Conservative treatment
                    <br />
                    @Html.CheckBoxFor(model => model.AdvQurentine) Quarentine
                    <br />
                    @Html.CheckBoxFor(model => model.AdvHomeIsolation) Home Isolation
                    <br />
                    @Html.CheckBoxFor(model => model.AdvReferHospital) Referred to Hospital
                </th>
                <th>
                    @Html.CheckBoxFor(model => model.IsAntibioticTaken)
                    Antibiotic Taken
                </th>
            </tr>
            <tr>
                <th colspan="4">
                    Co-morbidity for suspected cases:
                    <br />
                    @for (int i = 0; i < Model.CoMobiList.Count(); i++)
                    {
                        @Html.CheckBoxFor(model => model.CoMobiList[i].Selected, new { @style = "margin-left:20px; margin-right:5px;" })
                        @Html.DisplayFor(model => model.CoMobiList[i].Text)
                        @Html.HiddenFor(model => model.CoMobiList[i].Value)
                        @Html.HiddenFor(model => model.CoMobiList[i].Text)
                    }
                </th>
            </tr>
            <tr>
                <th>
                    Sample taken date
                    @Html.TextBoxFor(model => model.SampleTakenDate, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.SampleTakenDate)
                    <br />
                    Test Result
                    @Html.DropDownListFor(model => model.TestResultId, Model.TestResultList, "Not Applicable Now")
                    @Html.ValidationMessageFor(model => model.TestResultId)
                    <br />
                    Test Result Date
                    @Html.TextBoxFor(model => model.TestResultDate, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.TestResultDate)
                </th>
                <th>
                    2nd Sample taken date
                    @Html.TextBoxFor(model => model.SampleTakenDate1, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.SampleTakenDate1)
                    <br />
                    2nd Test Result
                    @Html.DropDownListFor(model => model.TestResultId1, Model.TestResultList, "Not Applicable Now")
                    @Html.ValidationMessageFor(model => model.TestResultId1)
                    <br />
                    2nd Test Result Date
                    @Html.TextBoxFor(model => model.TestResultDate1, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.TestResultDate1)
                </th>
                <th>
                    3rd Sample taken date
                    @Html.TextBoxFor(model => model.SampleTakenDate2, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.SampleTakenDate2)
                    <br />
                    3rd Test Result
                    @Html.DropDownListFor(model => model.TestResultId2, Model.TestResultList, "Not Applicable Now")
                    @Html.ValidationMessageFor(model => model.TestResultId2)
                    <br />
                    3rd Test Result Date
                    @Html.TextBoxFor(model => model.TestResultDate2, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.TestResultDate2)
                </th>
                <th>
                    Admitted at
                    @Html.DropDownListFor(model => model.AdmittedTypeId, Model.AdminTypeList, "Not Applicable Now")
                    @Html.ValidationMessageFor(model => model.AdmittedTypeId)
                    <br />
                    Admission Date
                    @Html.TextBoxFor(model => model.AdmissionDate, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.AdmissionDate)
                    <br />
                    Discharge Date
                    @Html.TextBoxFor(model => model.DischargeDate, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.DischargeDate)
                </th>
            </tr>

            <tr>
                <th>
                    Hospital Name
                    @Html.TextBoxFor(model => model.HospitalName)
                    @Html.ValidationMessageFor(model => model.HospitalName)
                </th>
                <th>
                    Attendant Name
                    @Html.TextBoxFor(model => model.AlternateName)
                    @Html.ValidationMessageFor(model => model.AlternateName)
                </th>
                <th>
                    Phone Number
                    @Html.TextBoxFor(model => model.AlternatePhoneNo)
                    @Html.ValidationMessageFor(model => model.AlternatePhoneNo)
                </th>
                <th>

                </th>
            </tr>
            <tr>
                <th>
                    Status
                    @Html.DropDownListFor(model => model.StatusId, Model.StatusList)
                    @Html.ValidationMessageFor(model => model.StatusId)
                </th>
                <th>
                    Comments
                    @Html.TextAreaFor(model => model.Comments)
                    @Html.ValidationMessageFor(model => model.Comments)
                </th>
                <th>
                    Next Followup
                    @Html.DropDownListFor(model => model.FollowupAfterDays, Model.FollowupAfterDaysList, "Please select next follow up days")
                    @Html.ValidationMessageFor(model => model.FollowupAfterDays)
                </th>
                <th>
                    <p> &nbsp; </p>
                    <input id="save-submit" type="submit" value="Submit Followup" class="btn btn-warning" />
                </th>
            </tr>
        </table>
    </div>
}

    <script type="text/javascript">
    ValidatateForm("form0");
    $(document).ready(function () {

        $("#save-submit").click(function () {

            if (!confirm("Do you want to Save?")) {
                return false;
            }

        });

        $('#DivisionId').change(function (event) {
            LoadDistrictSearch($('#DivisionId').val());
        });

        window.LoadDistrictSearch = function (areaId) {
                var url = '@Url.Content("~/Main/GetDistrictByDivision")?id=' + areaId;
            LoadDropDownListWithCall('DistrictId'
                    , url
                    , null
                    , null);
        }

        $('#SampleTakenDate').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#TestResultDate').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#SampleTakenDate1').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#TestResultDate1').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#SampleTakenDate2').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#TestResultDate2').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#AdmissionDate').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#DischargeDate').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });


    });
    </script>

    <script type="text/javascript">
        ValidatateForm("form0");

        $(document).ready(function () {

            var coll = document.getElementsByClassName("collapsible");

            var i;

            for (i = 0; i < coll.length; i++) {
                coll[i].addEventListener("click", function () {
                    this.classList.toggle("active");
                    var content = this.nextElementSibling;
                    if (content.style.display === "block") {
                        content.style.display = "none";
                    } else {
                        content.style.display = "block";
                    }
                });
            }
        });

    </script>


