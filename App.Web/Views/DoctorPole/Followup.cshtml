@using AppProj.Web.Helpers;
@using AppProj.Web;
@model AppProj.Web.Models.DoctorsPoleVisitModel
@{
    var ajaxOpt = new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "dialog1Body",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "openDialog1('Followup')",
        LoadingElementId = "loading",
        OnFailure = "failure"
    };

}
@using (Ajax.BeginForm("FollowupSave", "DoctorPole", ajaxOpt))
{
    @Html.ValidationSummary(true)

    @Html.HiddenFor(m => m.DoctorPoleId)
    @Html.HiddenFor(m => m.KioskToken)


    <button type="button" class="collapsible">@{var v5 = Model.DoctorsPole.StandingData7 == null ? "" : Model.DoctorsPole.StandingData7.Name;} @v5  <span style="font-size:11px;"> @Model.DoctorsPole.StaffName (PIN : @Model.DoctorsPole.PIN)</span></button>
    <div class="content">
        <table class="table table-striped table-bordered" style="width:100%">
            <tr>
                <th>Patient Name</th>
                <td>@Model.DoctorsPole.Name</td>
                <th>Mobile No</th>
                <td>@Model.DoctorsPole.MobileNo</td>
                <th>Gender</th>
                <td>@{var v0 = Model.DoctorsPole.StandingData == null ? "" : Model.DoctorsPole.StandingData.Name;} @v0</td>
            </tr>
            <tr>
                <th>Program</th>
                <td>@{var v1 = Model.DoctorsPole.StandingData1 == null ? "" : Model.DoctorsPole.StandingData1.Name;} @v1</td>
                <th>Area Office</th>
                <td>@Model.DoctorsPole.AreaOffice</td>
                <th rowspan="2" colspan="2">HR Comment: @Model.DoctorsPole.CommentByHR</th>
            </tr>
            <tr>
                <th>Division</th>
                <td>@{var v3 = Model.DoctorsPole.StandingData5 == null ? "" : Model.DoctorsPole.StandingData5.Name;} @v3</td>
                <th>District</th>
                <td>@{var v4 = Model.DoctorsPole.StandingData6 == null ? "" : Model.DoctorsPole.StandingData6.Name;} @v4</td>
            </tr>
        </table>
    </div>
    <table class="table table-striped table-bordered fixed_headers">
        <tr>
            <td>
                <strong>Any Travel?</strong>  @Model.DoctorsPole.IsTravel
            </td>
            <td>
                <strong>Travel within country?</strong> @Model.DoctorsPole.IsTravelCountry
            </td>
            <td>
                <strong>Travel outside country?</strong> @Model.DoctorsPole.IsTravelAbroad
            </td>
            <td>
                <strong>Any Contact history? </strong> @Model.DoctorsPole.IsContract
            </td>
        </tr>
    </table>

    <h3 style="padding-top:10px; color:#ff6a00">History</h3>
    if (Model.DoctorsPoleVisits.Count > 0)
    {
        foreach (var v in Model.DoctorsPoleVisits.OrderBy(c => c.EntryTime))
        {
            <button type="button" class="collapsible">By: <strong> @v.UserProfile.UserName </strong> at @v.EntryTime.ToString("dd MMM, yyyy hh:mm") </button>
            <div class="content">
                <table class="table table-striped table-bordered fixed_headers" style="width:100%">

                    <tr>
                        <td colspan="2" style="color:#c15305">
                            Symptoms collected by Call Center
                        </td>
                        <td colspan="2" style="color:#c15305">
                            Advices
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @if (v.IsFever)
                            {
                                <span>Fever</span><br />
                            }
                            @if (v.IsDryCough)
                            {
                                <span>Dry cough</span><br />
                            }
                            @if (v.IsSoreThroat)
                            {
                                <span>Sore throat</span><br />
                            }
                            @if (v.IsBreathing)
                            {
                                <span>Breathlessness</span>
                            }
                        </td>
                        <td>
                            Others:
                            <br />
                            @v.OtherSymptoms
                        </td>
                        <td>
                            @if (v.AdvConTreat == true)
                            {
                                <span>Conservative treatment</span><br />
                            }
                            @if (v.AdvQurentine == true)
                            {
                                <span>Quarentine</span><br />
                            }
                            @if (v.AdvHomeIsolation == true)
                            {
                                <span>Home Isolation</span><br />
                            }
                            @if (v.AdvReferHospital == true)
                            {
                                <span>Referred to Hospital</span>
                            }
                            <br />
                            @v.AdviceTxt
                        </td>
                        <th>
                            Antibiotic Tahen : @if (v.IsAntibioticTaken == true)
                            {<span>Yes</span> }
                            else
                            {<span>No</span>}
                            <br />
                            @v.AntibioticTxt

                        </th>
                    </tr>
                    <tr>
                        <td>
                            Status :
                            @{var s = v.StandingData == null ? "" : v.StandingData.Name;}
                            @s
                        </td>
                        <td>
                            Comments : @v.Comments
                        </td>
                        <th colspan="2">
                            Co-morbidity for suspected case : @v.CoMorbidities
                        </th>
                    </tr>
                    <tr>
                        <td>
                            Sample taken date : @v.SampleTakenDate.ToDateString()
                            <br />
                            Test Result :
                            @{var t = v.StandingData2 == null ? "" : v.StandingData2.Name;}
                            @t
                            <br />
                            Test Result Date : @v.TestResultDate.ToDateString()
                        </td>
                        <td>
                            2nd Sample taken date : @v.SampleTakenDate1.ToDateString()
                            <br />
                            2nd Test Result :
                            @{var t1 = v.StandingData4 == null ? "" : v.StandingData4.Name;}
                            @t1
                            <br />
                            2nd Test Result Date : @v.TestResultDate1.ToDateString()
                        </td>
                        <td>
                            3rd Sample taken date : @v.SampleTakenDate2.ToDateString()
                            <br />
                            3rd Test Result :
                            @{var t2 = v.StandingData5 == null ? "" : v.StandingData5.Name;}
                            @t2
                            <br />
                            3rd Test Result Date : @v.TestResultDate2.ToDateString()
                        </td>
                        <td>
                            Admitted at : @{var k = v.StandingData3 == null ? "" : v.StandingData3.Name;}
                            @k
                            <br />
                            Admission Date : @v.AdmissionDate.ToDateString()
                            <br />
                            Discharge Date : @v.DischargeDate.ToDateString()
                        </td>
                    </tr>

                    <tr>
                        <td>
                            Hospital Name : @v.HospitalName
                        </td>
                        <td>
                            Attendant Name : @v.AlternateName
                        </td>
                        <td>
                            Attendant Phone Number : @v.AlternatePhoneNo
                        </td>
                        <td>
                            Ofc Isolation: @{var oi = v.StandingData6 == null ? "" : v.StandingData6.Name;}
                            @oi
                        </td>
                    </tr>
                </table>
            </div>
        }
    }
    else
    {
        <p>No history found</p>
    }

    <h3 style="padding-top:10px; color:#ff6a00">Today's Followup</h3>
    <div style="width:100%">
        <table class="table table-striped table-bordered fixed_headers" style="width:100%">

            <tr>
                <td style="color:#c15305">
                    Symptoms collected by Call Center
                </td>
                <td colspan="2" style="color:#c15305">
                    Advices
                </td>
                <td style="color:#c15305">
                    Treatment
                </td>
            </tr>
            <tr>
                <th>
                    @Html.CheckBoxFor(model => model.IsFever) Fever
                    <br />
                    @Html.CheckBoxFor(model => model.IsDryCough) Dry cough
                    <br />
                    @Html.CheckBoxFor(model => model.IsSoreThroat) Sore throat
                    <br />
                    @Html.CheckBoxFor(model => model.IsBreathing) Breathlessness
                    Others :
                    @Html.TextBoxFor(model => model.OtherSymptoms, new { @class = "input-group form-control" })
                </th>
                <th>
                    @Html.CheckBoxFor(model => model.AdvConTreat) Conservative treatment
                    <br />
                    @Html.CheckBoxFor(model => model.AdvQurentine) Quarentine
                    <br />
                    @Html.CheckBoxFor(model => model.AdvHomeIsolation) Home Isolation
                    <br />
                    @Html.CheckBoxFor(model => model.AdvReferHospital) Referred to Hospital
                </th>
                <th>
                    Other Advices
                    <br />
                    @Html.TextAreaFor(model => model.AdviceTxt, new { @class = "input-group form-control" })
                </th>
                <th>
                    @Html.CheckBoxFor(model => model.IsAntibioticTaken)
                    Antibiotic Taken
                    @Html.TextAreaFor(model => model.AntibioticTxt, new { @class = "input-group form-control" })
                </th>
            </tr>
            <tr>
                <th colspan="4">
                    Co-morbidity for suspected cases:
                    <br />
                    @for (int i = 0; i < Model.CoMobiList.Count(); i++)
                    {
                        @Html.CheckBoxFor(model => model.CoMobiList[i].Selected, new { @style = "margin-left:20px; margin-right:5px;" })
                        @Html.DisplayFor(model => model.CoMobiList[i].Text)
                        @Html.HiddenFor(model => model.CoMobiList[i].Value)
                        @Html.HiddenFor(model => model.CoMobiList[i].Text)
                    }
                </th>
            </tr>
            <tr>
                <th>
                    Sample taken date
                    @Html.TextBoxFor(model => model.SampleTakenDate, "{0:dd MMM, yyyy}", new { @class = "input-group datepicker flatpickr form-control input", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.SampleTakenDate)
                    <br />
                    Test Result
                    @Html.DropDownListFor(model => model.TestResultId, Model.TestResultList, "Not Applicable Now", new { @class = "searchable-dropdown form-control" })
                    @Html.ValidationMessageFor(model => model.TestResultId)
                    <br />
                    Test Result Date
                    @Html.TextBoxFor(model => model.TestResultDate, "{0:dd MMM, yyyy}", new { @class = "input-group datepicker flatpickr form-control input", @placeholder = "Date" })
                    @Html.ValidationMessageFor(model => model.TestResultDate)
                </th>
                <th>
                    <div class="2ndLast">
                        2nd Last Sample taken date
                        @Html.TextBoxFor(model => model.SampleTakenDate1, "{0:dd MMM, yyyy}", new { @class = "input-group datepicker flatpickr form-control input", @placeholder = "Date" })
                        @Html.ValidationMessageFor(model => model.SampleTakenDate1)
                        <br />
                        2nd Last Test Result
                        @Html.DropDownListFor(model => model.TestResultId1, Model.TestResultList, "Not Applicable Now", new { @class = "searchable-dropdown form-control" })
                        @Html.ValidationMessageFor(model => model.TestResultId1)
                        <br />
                        2nd Last Test Result Date
                        @Html.TextBoxFor(model => model.TestResultDate1, "{0:dd MMM, yyyy}", new { @class = "input-group datepicker flatpickr form-control input", @placeholder = "Date" })
                        @Html.ValidationMessageFor(model => model.TestResultDate1)
                    </div>
                </th>
                <th>
                    <div class="last">
                        Last Sample taken date
                        @Html.TextBoxFor(model => model.SampleTakenDate2, "{0:dd MMM, yyyy}", new { @class = "input-group datepicker flatpickr form-control input", @placeholder = "Date" })
                        @Html.ValidationMessageFor(model => model.SampleTakenDate2)
                        <br />
                        Last Test Result
                        @Html.DropDownListFor(model => model.TestResultId2, Model.TestResultList, "Not Applicable Now", new { @class = "searchable-dropdown form-control" })
                        @Html.ValidationMessageFor(model => model.TestResultId2)
                        <br />
                        Last Test Result Date
                        @Html.TextBoxFor(model => model.TestResultDate2, "{0:dd MMM, yyyy}", new { @class = "input-group datepicker flatpickr form-control input", @placeholder = "Date" })
                        @Html.ValidationMessageFor(model => model.TestResultDate2)
                    </div>
                </th>
                <th>
                    Admitted at
                    @Html.DropDownListFor(model => model.AdmittedTypeId, Model.AdminTypeList, "Not Applicable Now", new { @class = "searchable-dropdown form-control" })
                    @Html.ValidationMessageFor(model => model.AdmittedTypeId)
                    <div class="hosdiv">
                        <br />
                        Admission Date
                        @Html.TextBoxFor(model => model.AdmissionDate, "{0:dd MMM, yyyy}", new { @class = "input-group datepicker flatpickr form-control input", @placeholder = "Date" })
                        @Html.ValidationMessageFor(model => model.AdmissionDate)
                        <br />
                        Discharge Date
                        @Html.TextBoxFor(model => model.DischargeDate, "{0:dd MMM, yyyy}", new { @class = "input-group datepicker flatpickr form-control input", @placeholder = "Date" })
                        @Html.ValidationMessageFor(model => model.DischargeDate)
                    </div>
                </th>
            </tr>

            <tr>
                <th>
                    <div class="hosdiv">
                        Hospital Name
                        @Html.TextBoxFor(model => model.HospitalName)
                        @Html.ValidationMessageFor(model => model.HospitalName)
                    </div>
                </th>
                <th>
                    <div class="hosdiv homediv">
                        Attendant Name
                        @Html.TextBoxFor(model => model.AlternateName)
                        @Html.ValidationMessageFor(model => model.AlternateName)
                    </div>
                </th>
                <th>
                    <div class="hosdiv homediv">
                        Phone Number
                        @Html.TextBoxFor(model => model.AlternatePhoneNo)
                        @Html.ValidationMessageFor(model => model.AlternatePhoneNo)
                    </div>
                </th>
                <th>
                    <div class="isodiv">
                        Isolation Office
                        @Html.DropDownListFor(model => model.IsolationOfficeId, Model.IsolationOffices, "Not Applicable")
                        @Html.ValidationMessageFor(model => model.IsolationOfficeId)
                    </div>
                </th>
            </tr>
            <tr>

                <th>
                    Comments
                    @Html.TextAreaFor(model => model.Comments, new { @class = "input-group form-control" })
                    @Html.ValidationMessageFor(model => model.Comments)
                </th>
                <th>
                    <span style="color:#ff6a00">Status</span>
                    @Html.DropDownListFor(model => model.StatusId, Model.StatusList, new { @class = "searchable-dropdown form-control" })
                    @Html.ValidationMessageFor(model => model.StatusId)
                    <div class="deathdiv">
                        <br />
                        Death Time
                        @Html.TextBoxFor(model => model.DeathTime, "{0:dd MMM, yyyy}", new { @class = "span2", @placeholder = "Date" })
                        @Html.ValidationMessageFor(model => model.DeathTime)
                    </div>
                </th>
                <td>
                    <div class="tokendiv">
                        <a href="#" id="btnOtp" class="btn btn-danger">Request for Token</a>
                        <div id="divOtp">
                            <input type="text" id="txtOtp" placeholder="Enter OTP Here" />
                            <a href="#" id="btnOtpSubmit" class="btn btn-danger">Submit OTP</a>
                        </div>
                        <span id="token"></span>
                    </div>
                </td>
                <th>
                    Next Followup
                    @Html.DropDownListFor(model => model.FollowupAfterDays, Model.FollowupAfterDaysList, "Please select next follow up days", new { @class = "searchable-dropdown form-control" })
                    @Html.ValidationMessageFor(model => model.FollowupAfterDays)
                    <br />
                    @*<input id="save-submit" type="submit" value="Submit Followup" class="btn btn-warning" />*@
                </th>

            </tr>
            <tr>
                <td class="control">
                    <p>
                        <input id="save-submit" type="submit" value="Submit Followup" class="btn btn-bracify font-color-white" />
                    </p>
                </td>
            </tr>
        </table>
    </div>
}
@using (Ajax.BeginForm("CreateDetail", "DoctorPole", ajaxOpt))
{
    <input type="hidden" id="PIN_" name="PIN_" value="@Model.DoctorsPole.PIN" />
    <input type="hidden" id="MobileNo_" name="MobileNo_" value="@Model.DoctorsPole.MobileNo" />

    <input id="save-submit" type="submit" value="Back" class="btn btn-info" />
}


<script type="text/javascript">
    ValidatateForm("form0");
    $(document).ready(function () {

        var OtpKey;
        $('#divOtp').hide();

        $("#btnOtpSubmit").die('click').live('click', function () {
            var otp = $('#txtOtp').val();

            if (otp == '') { alert('please enter OTP'); }
            else {
                GetToken(OtpKey, otp);
            }
        });

        $("#btnOtp").die('click').live('click', function () {

            $.ajax({
                type: "GET",
                data: {
                    "kioskId": 861837
                },
                url: '@Url.Action("CallForToken")',
                dataType: "json",
                crossOrigin: true,
                async: false,
                success: function (data) {
                    if (data.Success) {
                        $('#btnOtp').hide();

                        alert('An OTP has given to your mobile/email.');

                        $('#divOtp').show();

                        OtpKey = data.OtpKey;
                        //var otp = window.prompt("An OTP has given to your mobile/email. Please Enter OTP Here", "");

                        //GetToken(data.OtpKey, otp);
                    }
                    else {
                        alert(data.Message);
                    }
                },
                error: function () {
                    alert('error');
                }
            });

        });


        function GetToken(otpKey, otp) {
            $.ajax({
                type: "GET",
                data: {
                    "kioskId": 861837,
                    "otpKey": otpKey,
                    "otp": otp,
                    "profileId": $('#DoctorPoleId').val()
                },
                url: '@Url.Action("GetToken")',
                dataType: "json",
                crossOrigin: true,
                async: false,
                success: function (data) {
                    if (data.Success) {
                        alert('Token has given to the patient\'s mobile number and email ');
                        $('#token').html(data.Message);
                        $("#KioskToken").val(data.Message);
                        $('#divOtp').hide();
                    }
                    else {
                        $('#divOtp').hide();
                        alert(data.Message);
                    }
                },
                error: function () {
                    alert('error');
                }
            });
        }


        $("#save-submit").click(function () {

            if (!confirm("Do you want to Save?")) {
                return false;
            }

            Clear();

        });

        Admit();
        Status();
        TestResultDiv();

        function TestResultDiv() {

            var v = $('#SampleTakenDate').val();
            var v1 = $('#SampleTakenDate1').val();

            if (v != null || v != '') {
                $('#SampleTakenDate1').show();
            }
            else {
                $('#SampleTakenDate1').hide();
            }

            if (v1 != null || v1 != '') {
                $('#SampleTakenDate2').show();
            }
            else {
                $('#SampleTakenDate2').hide();
            }
        }

        function Clear() {
            var v = $('#AdmittedTypeId').val();

            if (v == 862673) { //office isolation
                $('#AdmissionDate').val(null);
                $('#DischargeDate').val(null);
                $('#HospitalName').val(null);
                $('#AlternateName').val(null);
                $('#AlternatePhoneNo').val(null);
            }
            else if (v == 861719) { //hospitalized
                $('#IsolationOfficeId').val(null);
            }
            else {
                $('#AdmissionDate').val(null);
                $('#DischargeDate').val(null);
                $('#HospitalName').val(null);
                $('#AlternateName').val(null);
                $('#AlternatePhoneNo').val(null);
                $('#IsolationOfficeId').val(null);
            }

            v = $('#StatusId').val();

            if (v == 862672) { //death

            }
            else if (v == 862671) { //recommandent for test
                $('#DeathTime').val(null);
            }
            else {

                $('#DeathTime').val(null);
            }
        }

        function Admit() {
            var v = $('#AdmittedTypeId').val();

            if (v == 862673) { //office isolation
                $(".isodiv").show();
                $(".hosdiv").hide();
            }
            else if (v == 861719) { //hospitalized
                $(".isodiv").hide();
                $(".hosdiv").show();
            }
            else if (v == 861718) { //home iso
                $(".isodiv").hide();
                $(".hosdiv").hide();
                $(".homediv").show();
            }
            else {
                $(".isodiv").hide();
                $(".hosdiv").hide();
            }

        }

        function Status() {
            var v = $('#StatusId').val();

            if (v == 862672) { //death
                $(".deathdiv").show();
                $(".tokendiv").hide();
            }
            else if (v == 862671 || v == 861702) { //recommandent for test
                $(".deathdiv").hide();
                $(".tokendiv").show();
            }
            else {
                $(".deathdiv").hide();
                $(".tokendiv").hide();
            }
        }

        $('#StatusId').change(function (event) {
            Status();
        });

        $('#AdmittedTypeId').change(function (event) {
            Admit();
        });

        window.LoadDistrictSearch = function (areaId) {
                var url = '@Url.Content("~/Main/GetDistrictByDivision")?id=' + areaId;
            LoadDropDownListWithCall('DistrictId'
                    , url
                    , null
                    , null);
        }

        $('#SampleTakenDate').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#TestResultDate').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#SampleTakenDate1').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#TestResultDate1').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#SampleTakenDate2').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#TestResultDate2').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#AdmissionDate').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });
        $('#DischargeDate').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });

        $('#DeathTime').datepicker({
            format: "dd M, yyyy",
            autoclose: true,
            endDate: '+0d',
            startDate: null
        });

        function btnOtpClick() {
            alert('ok');
        }
    });
</script>

<script type="text/javascript">
    ValidatateForm("form0");

    $(document).ready(function () {

        var coll = document.getElementsByClassName("collapsible");

        var i;

        for (i = 0; i < coll.length; i++) {
            coll[i].addEventListener("click", function () {
                this.classList.toggle("active");
                var content = this.nextElementSibling;
                if (content.style.display === "block") {
                    content.style.display = "none";
                } else {
                    content.style.display = "block";
                }
            });
        }
    });

</script>


