@using AppProj.Web.Helpers;
@using AppProj.Web;
@model AppProj.Web.Models.DoctorsPoleModel
@{
    var ajaxOpt = new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "dialog1Body",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "openDialog1('Followup')",
        LoadingElementId = "loading",
        OnFailure = "failure"
    };
}
@using (Ajax.BeginForm("Save", "DoctorPole", ajaxOpt))
{
    @Html.ValidationSummary(true)
    if (Model != null)
    {
        @Html.HiddenFor(m => m.Id)
    }
    @Html.HiddenFor(m => m.StaffName)
    <table>
        <tr>
            <td style="width:50%; vertical-align:top;">
                <h3 style="color:#ff6a00">
                    @Html.DisplayFor(m => m.StaffName)
                    @if (!Model.IsFound)
                    {
                        <span style="color:#0026ff">@Html.DisplayFor(m => m.Message)</span>
                    }
                </h3>
                <table class="table table-striped table-bordered fixed_headers">
                    <tr>
                        <td>
                            PIN
                            @Html.TextBoxFor(model => model.PIN)
                            @Html.ValidationMessageFor(model => model.PIN)
                            Program
                            @Html.DropDownListFor(model => model.ProgramId, Model.ProgramList)
                            @Html.ValidationMessageFor(model => model.ProgramId)
                            Designation
                            @Html.TextBoxFor(model => model.Designation, new { @style = "color:#ff6a00" })
                            @Html.ValidationMessageFor(model => model.Designation)
                            Division
                            @Html.DropDownListFor(model => model.DivisionId, Model.DivisionList)
                            @Html.ValidationMessageFor(model => model.DivisionId)
                            District
                            @Html.DropDownListFor(model => model.DistrictId, Model.DistrictList)
                            @Html.ValidationMessageFor(model => model.DistrictId)
                            Area Office
                            @Html.TextBoxFor(model => model.AreaOffice)
                            @Html.ValidationMessageFor(model => model.AreaOffice)
                        </td>
                        <td>
                            Who is Effected
                            @Html.DropDownListFor(model => model.EffectedPersonId, Model.EffectedPersonList)
                            @Html.ValidationMessageFor(model => model.EffectedPersonId)
                            Patient Name
                            @Html.TextBoxFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                            Patient Sex
                            @Html.DropDownListFor(model => model.GenderId, Model.GenderList)
                            @Html.ValidationMessageFor(model => model.GenderId)
                            Patient Mobile No
                            @Html.TextBoxFor(model => model.MobileNo)
                            @Html.ValidationMessageFor(model => model.MobileNo)
                            Patient Age
                            @Html.TextBoxFor(model => model.Age)
                            @Html.ValidationMessageFor(model => model.Age)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            Case History
                            <br />
                            @Html.CheckBoxFor(model => model.IsTravel) Any Travel
                            <br />
                            @Html.CheckBoxFor(model => model.IsTravelCountry) Travel within country
                            <br />
                            @Html.CheckBoxFor(model => model.IsTravelAbroad) Travel outside country
                            <br />
                            @Html.CheckBoxFor(model => model.IsContract) Contact history
                        </td>
                        <td>
                            Comment
                            @Html.TextAreaFor(model => model.CommentByHR)
                            @Html.ValidationMessageFor(model => model.CommentByHR)
                        </td>
                    </tr>
                    <tr>
                        <td>
                            @Ajax.ActionLink("<< Back ", "Create", "DoctorPole", ajaxOpt, new { @class = "" })
                        </td>
                        <td>
                            <p>
                                <input id="save-submit" type="submit" value="Save New Case" class="btn btn-primary" />
                            </p>
                        </td>
                    </tr>
                </table>
            </td>
            <td style="vertical-align:top;padding-left:10px;">
                <h3>Existing Patients of this Staff</h3>
                @if (Model.ExistingData != null)
                {
                    <table class="table table-striped table-bordered fixed_headers">
                        <tr>
                            <th>Who is effected</th>
                            <th>Name</th>
                            @*<th>Age</th>
                                <th>Gender</th>*@
                            <th>Entry Date</th>
                            <th>Status</th>
                            @if (UserRole.Check("DoctorPool_Doc", SessionHelper.Role))
                            {
                                <th>Action</th>
                            }
                        </tr>

                        @foreach (var v in Model.ExistingData)
                        {
                            <tr>
                                <td>@{var v5 = v.StandingData7 == null ? "" : v.StandingData7.Name;} @v5</td>
                                <td>@v.Name</td>
                                @*<td>@v.Age</td>
                                    <td>@v.StandingData.Name</td>*@
                                <td>@v.EntryTime.ToString("dd MM, yyyy")</td>
                                <td>
                                    @{var vs = v.StandingData6 == null ? "" : v.StandingData6.Name;}
                                    @vs
                                </td>
                                @if (UserRole.Check("DoctorPool_Doc", SessionHelper.Role))
                                {
                                    if (v.StatusId == 862672)
                                    {
                                        <td>
                                            Deceased
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            @Ajax.ActionLink("Continue", "Followup", "DoctorPole", new { id = v.Id }, ajaxOpt, new { @class = "" })
                                        </td>
                                    }
                                }
                            </tr>
                        }
                    </table>
                }
            </td>
        </tr>
    </table>
}
<script type="text/javascript">
    ValidatateForm("form0");
    $(document).ready(function () {

        $("#save-submit").click(function () {

            if (!confirm("Do you want to Save?")) {
                return false;
            }

        });

        $('#DivisionId').change(function (event) {
            LoadDistrictSearch($('#DivisionId').val());
        });

        window.LoadDistrictSearch = function (areaId) {
                var url = '@Url.Content("~/Main/GetDistrictByDivision")?id=' + areaId;
            LoadDropDownListWithCall('DistrictId'
                    , url
                    , null
                    , null);
        }

        //$('#Dob').datepicker({
        //    format: "dd M, yyyy",
        //    autoclose: true,
        //    endDate: '+0d',
        //    startDate: null
        //});

    });
</script>
